<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>saql</string>
    <string>asaql</string>
    <string>asa</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Stream Analytics Query Language</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric.sql</string>
		</dict>
		<dict>
			<key>match</key>
      <string>(?i:\bapply|case|create table|from|group\sby|having|into|timestamp\sby|select(\s+distinct)?|((left|right)\s)?+((inner|outer)\s)?+join|where|with\b)</string>
			<key>name</key>
			<string>keyword.other.DML.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\bAS\b</string>
			<key>name</key>
			<string>keyword.other.alias.sql</string>
		</dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(bigint|float|nvarchar|datetime|record|array)\b</string>
      <key>name</key>
      <string>storage.type.sql</string>
    </dict>
		<dict>
			<key>match</key>
			<string>\*</string>
			<key>name</key>
			<string>keyword.operator.star.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[!&lt;&gt;]?=|&lt;&gt;|&lt;|&gt;</string>
			<key>name</key>
			<string>keyword.operator.comparison.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-|\+|/</string>
			<key>name</key>
			<string>keyword.operator.math.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(AVG|COUNT|Collect|CollectTop|MAX|MIN|Percentile_Cont|Percentile_Disc|STDEV|STDEVP|SUM|TopOne|VAR|VARP)(?=\s*\()\b</string>
			<key>name</key>
			<string>keyword.control.aggregate.sql</string>
		</dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(ISFIRST|LAG|LAST)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.analytic.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(GetArrayElement|GetArrayElements|GetArrayLenght)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.array.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(CAST|TRY_CAST|GetType)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.conversion.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(DATENAME|DATEPART|DAY|MONTH|YEAR|DATETIMEFROMPARTS|DATEDIFF|DATEADD)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.datetime.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(ABS|CEILING|EXP|FLOOR|POWER|SIGN|SQUARE|SQRT)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.mathematical.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(GetRecordProperties|GetRecordPropertyValue)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.record.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(LEN|CONCAT|CHARINDEX|LOWER|SUBSTRING|PATINDEX|UPPER)(?=\s*\()</string>
      <key>name</key>
      <string>keyword.control.string.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(TUMBLINGWINDOW|HOPPINGWINDOW|SLIDINGWINDOW)\b</string>
      <key>name</key>
      <string>keyword.control.timemanagement.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(System.Timestamp|EventProcessedUtcTime|EventEnqueuedUtcTime|PartitionId)\b</string>
      <key>name</key>
      <string>entity.name.type.timemanagement.sql</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i)\b(dd|d|hh|mi|n|ss|s|ms|mcs)\b</string>
      <key>name</key>
      <string>entity.name.function.timemanagement.sql</string>
    </dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#regexps</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.sql</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Allow for special ↩ behavior</string>
			<key>match</key>
			<string>(\()(\))</string>
			<key>name</key>
			<string>meta.block.sql</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=--)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>--</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.sql</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.double-dash.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=#)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>#</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.sql</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.number-sign.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.c</string>
				</dict>
			</array>
		</dict>
		<key>regexps</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/(?=\S.*/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\/</string>
							<key>name</key>
							<string>constant.character.escape.slash.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%r\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>We should probably handle nested bracket pairs!?! -- Allan</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.modr.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_escape</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.sql</string>
		</dict>
		<key>string_interpolation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.sql</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#\{)([^\}]*)(\})</string>
			<key>name</key>
			<string>string.interpolated.sql</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(')[^'\\]*(')</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(`)[^`\\]*(`)</string>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(")[^"#]*(")</string>
					<key>name</key>
					<string>string.quoted.double.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.other.quoted.brackets.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.saql</string>
	<key>uuid</key>
	<string>D89123AC-6EDC-15D9-BDD8-770D93589AF6</string>
</dict>
</plist>
